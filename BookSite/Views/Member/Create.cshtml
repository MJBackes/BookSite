@model BookSite.Models.SiteModels.Member

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Member</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DisplayName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model != null && Model.NameIsTaken)
                {
                    <span style="color:orangered">That name is already taken.</span>
                }
                @Html.EditorFor(model => model.DisplayName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.UserImage, new { id = "imageTextBox", style = "visibility: hidden" })
                <canvas hidden id='canvas'></canvas>
                <img id='imgView' src="~/Content/Images/defaultAvatar.png">
                <input type='file' onchange='imgChosen(event)' name='img' id='image'>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id ="submitBtn" type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section scripts{
<script>
    $(document).on("click", "#submitBtn", function (event) {
            $("#imageTextBox").val(convertToBase64String(document.getElementById("imgView")));
    });
    	function imgChosen(event){
		    var file = event.target.files[0];
		    var fReader = new FileReader();
		    var imageEle = document.getElementById("imgView");
		    fReader.onload = function(event){
			    imageEle.src = event.target.result;
		    };
		    fReader.readAsDataURL(file);
    }
    	function convertToBase64String(img){
		var canvas = document.getElementById('canvas');
		var context = canvas.getContext("2d");
		context.drawImage(img,0,0,img.naturalWidth,img.naturalHeight,0,0,canvas.width,canvas.height);
		var dURL = canvas.toDataURL("image/png");
		return dURL;
	}
</script>
    }
<style>
    img{
        width:150px;
        height:150px;
    }
    canvas{
        display:none;
    }
</style>
